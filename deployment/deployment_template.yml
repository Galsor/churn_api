apiVersion: apps/v1
kind: Deployment
metadata:
  name: churn_api-2-{{ENVIRONMENT}}
  labels:
    environment: {{ENVIRONMENT}}
spec:
  selector:
    matchLabels:
      app: churn-predictor
      environment: {{ENVIRONMENT}}
  replicas: 1
  template:
    metadata:
      labels:
        app: churn-predictor
        environment: {{ENVIRONMENT}}
    spec:
      containers:
      - name: churn-predictor
        image: eu.gcr.io/yotta-square-ml3/churn_api-2:{{ENVIRONMENT}}
        imagePullPolicy: Always
        ports:
          - containerPort: 5000
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
        env: 
        - name: CONFIG_PATH
          value: "/secrets/config.yml"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/secrets/key.json"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: churn_api-secret-2
              key: db_username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: churn_api-secret-2
              key: db_password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: churn_api-secret-2
              key: database
      - name: cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"
          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Cloud SQL is fixed. Change this line with CI to direct Staging or production DB
          - "-instances=yotta-square-ml3:europe-west1:group-2=tcp:5432"
          
          - "-credential_file=/secrets/key.json"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        volumeMounts:
        - name: secrets
          mountPath: /secrets/
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: churn_api-secret-2

---
apiVersion: v1
kind: Service
metadata:
  name: churn_api-2-{{ENVIRONMENT}}-loadbalancer
spec:
  ports:
  - port: 5000
    targetPort: 5000
    name: http
  selector:
    app: churn-predictor
  type: LoadBalancer