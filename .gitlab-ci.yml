image: docker:latest
services:
  - docker:dind

stages:
  - unit_test
  - build
  - deploy
  - functional_test

unit-test:
  image: python:3.8.1
  stage: unit_test
  script: 
    - pip install -r requirements.txt
    - pip install -e .
    - pytest churn_api/test/unit
  only:
    - devA

functional-test:
  image: python:3.8.1
  stage: functional_test
  variables:
    BRANCH_NAME: $CI_COMMIT_BRANCH
  script:
    - pip install -r requirements.txt
    - pip install -e .
    - pytest churn_api/test/functional
  only:
    - staging
    - master

build-docker-image:
  stage: build
  variables:
    IMAGE_NAME: eu.gcr.io/yotta-square-ml3/$CI_PROJECT_NAME:$CI_COMMIT_BRANCH
  script:
  - echo "$GITLAB_IAM_PRIVATE_KEY"
  - echo "$GITLAB_IAM_PRIVATE_KEY" > key.json
  - docker build . -t $IMAGE_NAME
  - docker login -u _json_key -p "$(cat key.json)" $IMAGE_NAME
  - docker push $IMAGE_NAME
  only:
    - develop
    - staging

rename-docker-image:
  stage: build
  image: google/cloud-sdk:257.0.0
  script:
    - echo "$GITLAB_IAM_PRIVATE_KEY" > key.json
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud config set project yotta-square-ml3 
    - gcloud config set compute/zone europe-west1-b 
    - gcloud container clusters get-credentials churn_api-cluster
    - gcloud container images add-tag eu.gcr.io/yotta-square-ml3/$CI_PROJECT_NAME:staging eu.gcr.io/yotta-square-ml3/$CI_PROJECT_NAME:$CI_COMMIT_BRANCH
    - gcloud container images untag eu.gcr.io/yotta-square-ml3/$CI_PROJECT_NAME:staging
  only:
    - master

deployment:
  stage: deploy
  image: google/cloud-sdk:257.0.0
  script:
    - BRANCH_LOWER_CASE=$(echo $CI_COMMIT_BRANCH | tr [:upper:] [:lower:])
    - cat deployment/deployment_template.yml | sed 's/{{ENVIRONMENT}}/'$BRANCH_LOWER_CASE'/g' | tee deployment/deployment.yml
    - echo "$GITLAB_IAM_PRIVATE_KEY" > key.json
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud config set project yotta-square-ml3 
    - gcloud config set compute/zone europe-west1-b 
    - gcloud container clusters get-credentials churn_api-cluster
    - kubectl apply -f deployment/deployment.yml
    - rm deployment/deployment.yml
  only:
    - develop
    - staging
    - master

